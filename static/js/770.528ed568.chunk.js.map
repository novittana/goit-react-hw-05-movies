{"version":3,"file":"static/js/770.528ed568.chunk.js","mappings":"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","sources":["components/Cast.styled.js","components/Cast.jsx","components/Loader.js","servises/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style-type:none;\n  gap:10px;\n  margin-top: 20px;\n`;\nexport const CastListEl = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n`;\n\nexport const CastLisCharacter = styled.li`\n  max-width: 200px;\n`;","import { useState, useEffect } from 'react';\nimport { getMovieActors } from '../servises/api';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from './Loader';\nimport { CastList, CastListEl, CastLisCharacter } from './Cast.styled';\n\nexport default function Cast() {\n  const [results, setResults] = useState([]);\n  const [isLoading, setIsLoading] = useState('');\n\n const { movieId } = useParams();\n\n  useEffect(() => {\n     function validateDataList(dataList) {\n       return dataList.map(data => validateImgPath(data));\n    }\n   function validateImgPath(data) {\n       if (data.profile_path === null) {\n         data.profile_path =\n           'https://www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-4-user-grey-d8fe957375e70239d6abdd549fd7568c89281b2179b5f4470e2e12895792dfa5.svg';\n       } else {\n         data.profile_path = `https://image.tmdb.org/t/p/w500${data.profile_path}`;\n       }\n       return data;\n     }\n    setIsLoading(true);\n    getMovieActors(movieId)\n      .then(data => {\n        setResults(validateDataList(data.cast));\n      })\n      .catch(error => { console.log(error.message);})\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieId]);\n\n\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {results && (\n        <CastList>\n          {results.map(result => (\n            <CastListEl key={result.id}>\n              {result.profile_path && (\n                <div>\n                  <img\n                    src={result.profile_path}\n                    alt={result.name}\n                    width=\"200px\"\n                  />\n                </div>\n              )}\n              <div>\n                <h3>{result.name}</h3>\n                <CastLisCharacter>\n                  Character: {result.character}\n                </CastLisCharacter>\n              </div>\n            </CastListEl>\n          ))}\n        </CastList>\n      )}\n    </div>\n  );\n}\n\n","import { MagnifyingGlass } from 'react-loader-spinner';\n\nexport function Loader() {\n  return (\n    <div\n      style={{\n        position: 'fixed',\n        top: '0',\n        zIndex: '2',\n        width: '100vw',\n        height: '100wh',\n        overflow: 'hidden',\n        background: 'rgba(0,0,0.0.2)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <MagnifyingGlass\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"MagnifyingGlass-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"MagnifyingGlass-wrapper\"\n        glassColor=\"#c0efff\"\n        color=\"#e15b64\"\n      />\n    </div>\n  );\n}\n","import axios from 'axios';\n\n\n  const BASE_URL = 'https://api.themoviedb.org/';\n  const API_KEY = '8aba4e3419a44727b7eb66f35fce4fa2';\n\n  /**\n   * getPopularFilmList description\n   * @return {JSON} obj response\n   */\n export async function getPopularFilmList(page) {\n    const response = await axios.get(\n      `${BASE_URL}3/trending/movie/day`,\n      {\n        params: {\n          api_key: API_KEY,\n          page: page || 1,\n        },\n      }\n    );\n\n    validateDataResponse(response.data);\n    return response.data;\n  }\n\n  /**\n   * getFilmListByKeyWord description\n   * @param  {string} keyWord description\n   * @return {JSON}  obj response\n   */\n export async function getFilmListByKeyWord(keyWord, page) {\n    const response = await axios.get(`${BASE_URL}3/search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query: keyWord,\n        page: 1,\n      },\n    });\n\n    validateDataResponse(response.data);\n    return response.data;\n  }\n\n  /**\n   * getFilmFullInfo description\n   * @param  {number} filmId description\n   * @return {JSON}  obj response\n   */\n export async function getFilmFullInfo(filmId) {\n   const response = await axios.get(`${BASE_URL}3/movie/${filmId}`, {\n     params: {\n       api_key: API_KEY,\n     },\n   });\n\n   validateDataResponse(response.data);\n   return response.data;\n }\n\nexport async function getMovieActors(filmId) {\n   const response = await axios.get(`${BASE_URL}3/movie/${filmId}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n   });\n  \n  validateDataResponse(response.data);\n    return response.data;\n  }\n\n  export async function getMovieReviews(filmId) {\n    const response = await axios.get(`${BASE_URL}3/movie/${filmId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    validateDataResponse(response.data);\n    return response.data;\n  }\n\n  export function validateDataResponse(data) {\n    if (data.poster_path) {\n      data.poster_path = `https://image.tmdb.org/t/p/w500${data.poster_path}`;\n    }\n\n    if (data.backdrop_path) {\n      data.backdrop_path = `https://image.tmdb.org/t/p/w500${data.backdrop_path}`;\n    }\n\n    return data;\n  }\n\n"],"names":["CastList","styled","CastListEl","CastLisCharacter","Cast","useState","results","setResults","isLoading","setIsLoading","movieId","useParams","useEffect","getMovieActors","then","data","cast","map","profile_path","validateImgPath","catch","error","console","log","message","finally","Loader","result","src","alt","name","width","character","id","style","position","top","zIndex","height","overflow","background","display","alignItems","justifyContent","visible","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","BASE_URL","API_KEY","getPopularFilmList","page","axios","params","api_key","validateDataResponse","response","getFilmListByKeyWord","keyWord","query","getFilmFullInfo","filmId","getMovieReviews","poster_path","backdrop_path"],"sourceRoot":""}