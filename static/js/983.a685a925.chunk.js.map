{"version":3,"file":"static/js/983.a685a925.chunk.js","mappings":"4LAEO,SAASA,IACd,OACE,gBACEC,MAAO,CACLC,SAAU,QACVC,IAAK,IACLC,OAAQ,IACRC,MAAO,QACPC,OAAQ,QACRC,SAAU,SACVC,WAAY,kBACZC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAXpB,UAcE,SAAC,KAAD,CACEC,SAAS,EACTN,OAAO,KACPD,MAAM,KACNQ,UAAU,0BACVC,aAAc,CAAC,EACfC,aAAa,0BACbC,WAAW,UACXC,MAAM,aAIb,C,qICxBc,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IACbE,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJN,EAAWM,EAAKP,QACjB,IACAQ,OAAM,SAAAC,GAAWC,QAAQC,IAAIF,EAAQ,IACrCG,SAAQ,WACPT,GAAa,EACd,GACJ,GAAE,KAGD,6BACE,2CACCD,IAAa,SAAC,IAAD,KACd,wBACGF,EAAQa,KAAI,SAAAC,GAAM,OACjB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAOE,IAAMC,MAAO,CAAEC,KAAMrB,GAAjD,UACE,wBAAKiB,EAAOK,WAFPL,EAAOE,GADC,QAU1B,C,+LCnCOI,EAAW,8BACXC,EAAU,mCAMV,SAAehB,EAAtB,kCAmBI,SAAL,IAnBQ,OAmBR,oBAnBQ,WAAkCiB,GAAlC,uFACmBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,wBAErB,CACEI,OAAQ,CACNC,QAASJ,EACTC,KAAMA,GAAQ,KANhB,cAWJI,GAVMC,EADF,QAW0BpB,MAX1B,kBAYGoB,EAASpB,MAZZ,kEAoBA,SAAeqB,EAAtB,oCAiBI,SAAL,IAjBQ,OAiBR,oBAjBQ,WAAoCC,EAASP,GAA7C,uFACmBC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAAuC,CAC5DI,OAAQ,CACNC,QAASJ,EACTS,MAAOD,EACPP,KAAM,KALN,cASJI,GARMC,EADF,QAS0BpB,MAT1B,kBAUGoB,EAASpB,MAVZ,kEAkBA,SAAewB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBT,EAAAA,EAAAA,IAAA,UAAaH,EAAb,mBAAgCY,GAAU,CAC/DR,OAAQ,CACNC,QAASJ,KAHR,cAOLK,GANMC,EADD,QAOyBpB,MAPzB,kBAQEoB,EAASpB,MARX,kEAWD,SAAe0B,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,uFACmBT,EAAAA,EAAAA,IAAA,UAAaH,EAAb,mBAAgCY,EAAhC,YAAkD,CACtER,OAAQ,CACNC,QAASJ,KAHV,cAOLK,GANOC,EADF,QAOyBpB,MAPzB,kBAQIoB,EAASpB,MARb,kEAWE,SAAe2B,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,uFACkBT,EAAAA,EAAAA,IAAA,UAAaH,EAAb,mBAAgCY,EAAhC,YAAkD,CACvER,OAAQ,CACNC,QAASJ,KAHR,cAOLK,GANMC,EADD,QAOyBpB,MAPzB,kBAQEoB,EAASpB,MARX,kEAWA,SAASmB,EAAqBnB,GASnC,OARIA,EAAK4B,cACP5B,EAAK4B,YAAL,yCAAqD5B,EAAK4B,cAGxD5B,EAAK6B,gBACP7B,EAAK6B,cAAL,yCAAuD7B,EAAK6B,gBAGvD7B,CACR,C","sources":["components/Loader.js","pages/HomePage.jsx","servises/api.js"],"sourcesContent":["import { MagnifyingGlass } from 'react-loader-spinner';\n\nexport function Loader() {\n  return (\n    <div\n      style={{\n        position: 'fixed',\n        top: '0',\n        zIndex: '2',\n        width: '100vw',\n        height: '100wh',\n        overflow: 'hidden',\n        background: 'rgba(0,0,0.0.2)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <MagnifyingGlass\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"MagnifyingGlass-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"MagnifyingGlass-wrapper\"\n        glassColor=\"#c0efff\"\n        color=\"#e15b64\"\n      />\n    </div>\n  );\n}\n","import { Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getPopularFilmList } from '../servises/api';\nimport { Loader } from 'components/Loader';\nimport { useLocation } from 'react-router-dom';\n\nexport default function HomePage() {\n  const location = useLocation();\n  const [results, setResults] = useState([]);\n  const [isLoading, setIsLoading] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPopularFilmList()\n      .then(data => {\n        setResults(data.results);\n      })\n      .catch(error => { console.log(error);})\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <main>\n      <h2>Trending today</h2>\n      {isLoading && <Loader />}\n      <ul>\n        {results.map(result => (\n          <li key={result.id}>\n            <Link to={`/movies/${result.id}`} state={{ from: location }}>\n              <h3>{result.title}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </main>\n  );\n}\n\n","import axios from 'axios';\n\n\n  const BASE_URL = 'https://api.themoviedb.org/';\n  const API_KEY = '8aba4e3419a44727b7eb66f35fce4fa2';\n\n  /**\n   * getPopularFilmList description\n   * @return {JSON} obj response\n   */\n export async function getPopularFilmList(page) {\n    const response = await axios.get(\n      `${BASE_URL}3/trending/movie/day`,\n      {\n        params: {\n          api_key: API_KEY,\n          page: page || 1,\n        },\n      }\n    );\n\n    validateDataResponse(response.data);\n    return response.data;\n  }\n\n  /**\n   * getFilmListByKeyWord description\n   * @param  {string} keyWord description\n   * @return {JSON}  obj response\n   */\n export async function getFilmListByKeyWord(keyWord, page) {\n    const response = await axios.get(`${BASE_URL}3/search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query: keyWord,\n        page: 1,\n      },\n    });\n\n    validateDataResponse(response.data);\n    return response.data;\n  }\n\n  /**\n   * getFilmFullInfo description\n   * @param  {number} filmId description\n   * @return {JSON}  obj response\n   */\n export async function getFilmFullInfo(filmId) {\n   const response = await axios.get(`${BASE_URL}3/movie/${filmId}`, {\n     params: {\n       api_key: API_KEY,\n     },\n   });\n\n   validateDataResponse(response.data);\n   return response.data;\n }\n\nexport async function getMovieActors(filmId) {\n   const response = await axios.get(`${BASE_URL}3/movie/${filmId}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n   });\n  \n  validateDataResponse(response.data);\n    return response.data;\n  }\n\n  export async function getMovieReviews(filmId) {\n    const response = await axios.get(`${BASE_URL}3/movie/${filmId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    validateDataResponse(response.data);\n    return response.data;\n  }\n\n  export function validateDataResponse(data) {\n    if (data.poster_path) {\n      data.poster_path = `https://image.tmdb.org/t/p/w500${data.poster_path}`;\n    }\n\n    if (data.backdrop_path) {\n      data.backdrop_path = `https://image.tmdb.org/t/p/w500${data.backdrop_path}`;\n    }\n\n    return data;\n  }\n\n"],"names":["Loader","style","position","top","zIndex","width","height","overflow","background","display","alignItems","justifyContent","visible","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","HomePage","location","useLocation","useState","results","setResults","isLoading","setIsLoading","useEffect","getPopularFilmList","then","data","catch","error","console","log","finally","map","result","to","id","state","from","title","BASE_URL","API_KEY","page","axios","params","api_key","validateDataResponse","response","getFilmListByKeyWord","keyWord","query","getFilmFullInfo","filmId","getMovieActors","getMovieReviews","poster_path","backdrop_path"],"sourceRoot":""}