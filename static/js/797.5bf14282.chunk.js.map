{"version":3,"file":"static/js/797.5bf14282.chunk.js","mappings":"uQAMe,SAASA,IACrB,IAAMC,GAAWC,EAAAA,EAAAA,MAClB,GAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,qGACwBC,EAAAA,EAAAA,IAAqBH,GAD7C,OACQL,EADR,OAGEC,EAAWD,EAAQA,SAHrB,2CAFc,wBACA,KAAVK,GADU,mCAOdI,EACD,GAAE,CAACJ,IASJ,OACE,iCACE,kBAAMK,SATW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfV,EAAgB,CAAEC,MAAOQ,EAAKE,SAASV,MAAMW,QAC7CH,EAAKI,OACN,EAIG,WACE,kBAAOC,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAb,uBAEDlB,IACC,wBACGA,EAAQoB,KAAI,SAAAC,GAAM,OACjB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAOE,IAAMC,MAAO,CAAEC,KAAM5B,GAAjD,UACE,wBAAKwB,EAAOK,WAFPL,EAAOE,GADC,QAW5B,C,+LC7COI,EAAW,8BACXC,EAAU,mCAMV,SAAeC,EAAtB,kCAmBI,SAAL,IAnBQ,OAmBR,oBAnBQ,WAAkCC,GAAlC,uFACmBC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,wBAErB,CACEK,OAAQ,CACNC,QAASL,EACTE,KAAMA,GAAQ,KANhB,cAWJI,GAVMC,EADF,QAW0BC,MAX1B,kBAYGD,EAASC,MAZZ,kEAoBA,SAAe5B,EAAtB,oCAiBI,SAAL,IAjBQ,OAiBR,oBAjBQ,WAAoC6B,EAASP,GAA7C,uFACmBC,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,kBAAuC,CAC5DK,OAAQ,CACNC,QAASL,EACTvB,MAAOgC,EACPP,KAAM,KALN,cASJI,GARMC,EADF,QAS0BC,MAT1B,kBAUGD,EAASC,MAVZ,kEAkBA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBR,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,mBAAgCY,GAAU,CAC/DP,OAAQ,CACNC,QAASL,KAHR,cAOLM,GANMC,EADD,QAOyBC,MAPzB,kBAQED,EAASC,MARX,kEAWD,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,uFACmBR,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,mBAAgCY,EAAhC,YAAkD,CACtEP,OAAQ,CACNC,QAASL,KAHV,cAOLM,GANOC,EADF,QAOyBC,MAPzB,kBAQID,EAASC,MARb,kEAWE,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,uFACkBR,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,mBAAgCY,EAAhC,YAAkD,CACvEP,OAAQ,CACNC,QAASL,KAHR,cAOLM,GANMC,EADD,QAOyBC,MAPzB,kBAQED,EAASC,MARX,kEAWA,SAASF,EAAqBE,GASnC,OARIA,EAAKM,cACPN,EAAKM,YAAL,yCAAqDN,EAAKM,cAGxDN,EAAKO,gBACPP,EAAKO,cAAL,yCAAuDP,EAAKO,gBAGvDP,CACR,C","sources":["pages/MoviesPage.jsx","servises/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getFilmListByKeyWord } from '../servises/api';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nexport default function MoviesPage() {\n   const location = useLocation();\n  const [results, setResults] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query === '') return;\n    async function fetchMovieByQuery() {\n      const results = await getFilmListByKeyWord(query);\n\n      setResults(results.results);\n    }\n    fetchMovieByQuery();\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ query: form.elements.query.value });\n    form.reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"query\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      {results && (\n        <ul>\n          {results.map(result => (\n            <li key={result.id}>\n              <Link to={`/movies/${result.id}`} state={{ from: location }}>\n                <h3>{result.title}</h3>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\n\n  const BASE_URL = 'https://api.themoviedb.org/';\n  const API_KEY = '8aba4e3419a44727b7eb66f35fce4fa2';\n\n  /**\n   * getPopularFilmList description\n   * @return {JSON} obj response\n   */\n export async function getPopularFilmList(page) {\n    const response = await axios.get(\n      `${BASE_URL}3/trending/movie/day`,\n      {\n        params: {\n          api_key: API_KEY,\n          page: page || 1,\n        },\n      }\n    );\n\n    validateDataResponse(response.data);\n    return response.data;\n  }\n\n  /**\n   * getFilmListByKeyWord description\n   * @param  {string} keyWord description\n   * @return {JSON}  obj response\n   */\n export async function getFilmListByKeyWord(keyWord, page) {\n    const response = await axios.get(`${BASE_URL}3/search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query: keyWord,\n        page: 1,\n      },\n    });\n\n    validateDataResponse(response.data);\n    return response.data;\n  }\n\n  /**\n   * getFilmFullInfo description\n   * @param  {number} filmId description\n   * @return {JSON}  obj response\n   */\n export async function getFilmFullInfo(filmId) {\n   const response = await axios.get(`${BASE_URL}3/movie/${filmId}`, {\n     params: {\n       api_key: API_KEY,\n     },\n   });\n\n   validateDataResponse(response.data);\n   return response.data;\n }\n\nexport async function getMovieActors(filmId) {\n   const response = await axios.get(`${BASE_URL}3/movie/${filmId}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n   });\n  \n  validateDataResponse(response.data);\n    return response.data;\n  }\n\n  export async function getMovieReviews(filmId) {\n    const response = await axios.get(`${BASE_URL}3/movie/${filmId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    validateDataResponse(response.data);\n    return response.data;\n  }\n\n  export function validateDataResponse(data) {\n    if (data.poster_path) {\n      data.poster_path = `https://image.tmdb.org/t/p/w500${data.poster_path}`;\n    }\n\n    if (data.backdrop_path) {\n      data.backdrop_path = `https://image.tmdb.org/t/p/w500${data.backdrop_path}`;\n    }\n\n    return data;\n  }\n\n"],"names":["MoviesPage","location","useLocation","useState","results","setResults","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getFilmListByKeyWord","fetchMovieByQuery","onSubmit","e","preventDefault","form","currentTarget","elements","value","reset","type","name","map","result","to","id","state","from","title","BASE_URL","API_KEY","getPopularFilmList","page","axios","params","api_key","validateDataResponse","response","data","keyWord","getFilmFullInfo","filmId","getMovieActors","getMovieReviews","poster_path","backdrop_path"],"sourceRoot":""}